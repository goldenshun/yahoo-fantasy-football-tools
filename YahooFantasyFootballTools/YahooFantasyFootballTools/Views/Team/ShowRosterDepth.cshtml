@model YahooFantasyFootballTools.Models.RosterDepthModel

@{
    ViewBag.Title = "Team Roster Depth";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Team Roster Depth</h2>
<h4>
    @if (Model.SelectedWeek > 1)
    {
        @Html.ActionLink("Prev", "ShowRosterDepth", "Team", new { teamKey = Model.Team.Key, week = Model.SelectedWeek - 1 }, null)
    }
    Week @Model.SelectedWeek
    @if (Model.SelectedWeek < Model.Weeks)
    {
        @Html.ActionLink("Next", "ShowRosterDepth", "Team", new { teamKey = Model.Team.Key, week = Model.SelectedWeek + 1 }, null)
    }
</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Position</th>
            <th>Depth Rating</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var positionDepth in Model.PositionDepths)
        {
            <tr class="@DepthClass(positionDepth.DepthValue)">
                <td>@positionDepth.PositionName</td>
                <td>@positionDepth.DepthName</td>
            </tr>
        }    
    </tbody>
</table>

<h4>Roster</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Player Name</th>
            <th>Position</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var player in Model.Players)
        {
            <tr class="@StatusClass(player)">
                <td>@player.Name</td>
                <td>@string.Join(",", player.EligiblePositions.Select(p => p.Abbreviation))</td>
                <td>@if(player.ByeWeeks.Contains(Model.SelectedWeek))
                    {
                        <text>Bye</text>
                    }
                    else
                    {
                        <text>@player.Status</text>
                    }
                </td>
            </tr>
        }    
    </tbody>
</table>

<div class="pagination">
    <ul>
        @for (int i = 1; i <= Model.Weeks; i++)
        {
            <li class="@(Model.SelectedWeek == i ? "active" : string.Empty)">
                @Html.ActionLink(i.ToString(), "ShowRosterDepth", "Team", new { teamKey = Model.Team.Key, week = i }, null)
            </li>
        }
    </ul>
</div>
    
@using Tools.Analysis.Domain;
@using Fantasizer.Domain;
@functions{
    private string DepthClass(PositionDepth depth)
    {
        switch(depth)
        {
            case PositionDepth.Shallow:
            case PositionDepth.VeryShallow:
                return "error";
            default: return string.Empty;
        }
    }
    
    private string StatusClass(Player player)
    {
        if(player.ByeWeeks.Contains(Model.SelectedWeek))
        {
            return "error";    
        }
        
        switch(player.Status)
        {
            case "O":
            case "D":
            case "IR":
                return "error";
            case "Q":
                return "warning";
            default: return string.Empty;   
        }
    }
}